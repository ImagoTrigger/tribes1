//----------------------------------------------------------------------------
//
//  Euler     - probable inventor of the fourier transform.
//  Gauss     - probable inventor of the FFT.
//  Hartley   - probable inventor of the hartley transform.
//  Buneman   - for a really cool trig generator
//
//----------------------------------------------------------------------------

#ifndef _LSTRIG_H_
#define _LSTRIG_H_

#ifndef REAL
//#define REAL double
#define REAL float
#endif
    
//----------------------------------------------------------------------------
#ifdef GOOD_TRIG

#define FHT_SWAP(a,b,t) {(t)=(a);(a)=(b);(b)=(t);}
#define TRIG_VARS   int t_lam;
#define TRIG_INIT(k,c,s)                                    \
{                                                           \
   for ( int i=2; i<=k; i++ )                               \
      {coswrk[i]=costab[i];sinwrk[i]=sintab[i];}            \
   t_lam = 0;                                               \
   c;                                                       \
   s;                                                       \
}
#define TRIG_NEXT(k,c,s)                                    \
{                                                           \
   int i,j;                                                 \
   (t_lam)++;                                               \
   for ( i=0; !((1<<i)&t_lam); i++ );                       \
   i = k-i;                                                 \
   s = sinwrk[i];                                           \
   c = coswrk[i];                                           \
   if ( i>1 )                                               \
   {                                                        \
      for ( j=k-i+2; (1<<j)&t_lam; j++ );                   \
      j = k - j;                                            \
      sinwrk[i] = halsec[i] * (sinwrk[i-1] + sinwrk[j]);    \
      coswrk[i] = halsec[i] * (coswrk[i-1] + coswrk[j]);    \
   }                                                        \
}
#define TRIG_RESET(k,c,s)


//----------------------------------------------------------------------------
#else // FAST_TRIG

#define TRIG_VARS REAL t_c,t_s;
#define TRIG_INIT(k,c,s)                                    \
{                                                           \
   t_c  = costab[k];                                        \
   t_s  = sintab[k];                                        \
   c    = 1;                                                \
   s    = 0;                                                \
}
#define TRIG_NEXT(k,c,s)                                    \
{                                                           \
   REAL t = c;                                              \
   c   = t*t_c - s*t_s;                                     \
   s   = t*t_s + s*t_c;                                     \
}
#define TRIG_RESET(k,c,s)

#endif   // GOOD_TRIG

//----------------------------------------------------------------------------
static REAL halsec[20]=
    {
     REAL(0),
     REAL(0),
     REAL(.54119610014619698439972320536638942006107206337801),
     REAL(.50979557910415916894193980398784391368261849190893),
     REAL(.50241928618815570551167011928012092247859337193963),
     REAL(.50060299823519630134550410676638239611758632599591),
     REAL(.50015063602065098821477101271097658495974913010340),
     REAL(.50003765191554772296778139077905492847503165398345),
     REAL(.50000941253588775676512870469186533538523133757983),
     REAL(.50000235310628608051401267171204408939326297376426),
     REAL(.50000058827484117879868526730916804925780637276181),
     REAL(.50000014706860214875463798283871198206179118093251),
     REAL(.50000003676714377807315864400643020315103490883972),
     REAL(.50000000919178552207366560348853455333939112569380),
     REAL(.50000000229794635411562887767906868558991922348920),
     REAL(.50000000057448658687873302235147272458812263401372)
    };
static REAL costab[20]=
    {
     REAL(.00000000000000000000000000000000000000000000000000),
     REAL(.70710678118654752440084436210484903928483593768847),
     REAL(.92387953251128675612818318939678828682241662586364),
     REAL(.98078528040323044912618223613423903697393373089333),
     REAL(.99518472667219688624483695310947992157547486872985),
     REAL(.99879545620517239271477160475910069444320361470461),
     REAL(.99969881869620422011576564966617219685006108125772),
     REAL(.99992470183914454092164649119638322435060646880221),
     REAL(.99998117528260114265699043772856771617391725094433),
     REAL(.99999529380957617151158012570011989955298763362218),
     REAL(.99999882345170190992902571017152601904826792288976),
     REAL(.99999970586288221916022821773876567711626389934930),
     REAL(.99999992646571785114473148070738785694820115568892),
     REAL(.99999998161642929380834691540290971450507605124278),
     REAL(.99999999540410731289097193313960614895889430318945),
     REAL(.99999999885102682756267330779455410840053741619428)
    };
static REAL sintab[20]=
    {
     REAL(1.0000000000000000000000000000000000000000000000000),
     REAL(.70710678118654752440084436210484903928483593768846),
     REAL(.38268343236508977172845998403039886676134456248561),
     REAL(.19509032201612826784828486847702224092769161775195),
     REAL(.09801714032956060199419556388864184586113667316749),
     REAL(.04906767432741801425495497694268265831474536302574),
     REAL(.02454122852291228803173452945928292506546611923944),
     REAL(.01227153828571992607940826195100321214037231959176),
     REAL(.00613588464915447535964023459037258091705788631738),
     REAL(.00306795676296597627014536549091984251894461021344),
     REAL(.00153398018628476561230369715026407907995486457522),
     REAL(.00076699031874270452693856835794857664314091945205),
     REAL(.00038349518757139558907246168118138126339502603495),
     REAL(.00019174759731070330743990956198900093346887403385),
     REAL(.00009587379909597734587051721097647635118706561284),
     REAL(.00004793689960306688454900399049465887274686668768)
    };
static REAL coswrk[20]=
    {
     REAL(.00000000000000000000000000000000000000000000000000),
     REAL(.70710678118654752440084436210484903928483593768847),
     REAL(.92387953251128675612818318939678828682241662586364),
     REAL(.98078528040323044912618223613423903697393373089333),
     REAL(.99518472667219688624483695310947992157547486872985),
     REAL(.99879545620517239271477160475910069444320361470461),
     REAL(.99969881869620422011576564966617219685006108125772),
     REAL(.99992470183914454092164649119638322435060646880221),
     REAL(.99998117528260114265699043772856771617391725094433),
     REAL(.99999529380957617151158012570011989955298763362218),
     REAL(.99999882345170190992902571017152601904826792288976),
     REAL(.99999970586288221916022821773876567711626389934930),
     REAL(.99999992646571785114473148070738785694820115568892),
     REAL(.99999998161642929380834691540290971450507605124278),
     REAL(.99999999540410731289097193313960614895889430318945),
     REAL(.99999999885102682756267330779455410840053741619428)
    };
static REAL sinwrk[20]=
    {
     REAL(1.0000000000000000000000000000000000000000000000000),
     REAL(.70710678118654752440084436210484903928483593768846),
     REAL(.38268343236508977172845998403039886676134456248561),
     REAL(.19509032201612826784828486847702224092769161775195),
     REAL(.09801714032956060199419556388864184586113667316749),
     REAL(.04906767432741801425495497694268265831474536302574),
     REAL(.02454122852291228803173452945928292506546611923944),
     REAL(.01227153828571992607940826195100321214037231959176),
     REAL(.00613588464915447535964023459037258091705788631738),
     REAL(.00306795676296597627014536549091984251894461021344),
     REAL(.00153398018628476561230369715026407907995486457522),
     REAL(.00076699031874270452693856835794857664314091945205),
     REAL(.00038349518757139558907246168118138126339502603495),
     REAL(.00019174759731070330743990956198900093346887403385),
     REAL(.00009587379909597734587051721097647635118706561284),
     REAL(.00004793689960306688454900399049465887274686668768)
    };

#endif   // _LSTRIG_H_
